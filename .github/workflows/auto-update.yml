name: Auto Update average.json

permissions:
  contents: write

concurrency:
  group: auto-update-average-json
  cancel-in-progress: true

on:
  schedule:
    - cron: '0 */2 * * *'  # 2시간마다 실행
  workflow_dispatch:

jobs:
  update-json:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: true

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'  # pip 캐시도 자동 적용

    # Playwright 브라우저 바이너리 캐시
    - name: Restore ms-playwright cache
      uses: actions/cache@v4
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-ms-playwright-v1  # 버전 바뀌면 키만 바꿔주면 됨

    - name: Install Playwright (skip download if cache hit)
      env:
        PLAYWRIGHT_BROWSERS_PATH: ~/.cache/ms-playwright
      run: |
        python -m pip install --upgrade pip
        pip install playwright
        # 캐시가 있으면 빠르게 완료됨
        playwright install --with-deps chromium

    - name: Run update script
      env:
        PLAYWRIGHT_BROWSERS_PATH: ~/.cache/ms-playwright
      run: python update_average.py

    - name: Rebase on latest main (avoid non-ff)
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Actions"
        git pull --rebase origin "${GITHUB_REF_NAME:-main}" || true

    - name: Commit and push if changed
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Actions"

        # average.json 변경 없으면 종료
        if git diff --quiet -- average.json; then
          echo "no changes"
          exit 0
        fi

        git add average.json
        git commit -m "자동 갱신: average.json [skip ci]"
        # 경쟁 상황 대비 한번 더 최신 반영
        git pull --rebase origin "${GITHUB_REF_NAME:-main}" || true
        git push origin HEAD:"${GITHUB_REF_NAME:-main}"
